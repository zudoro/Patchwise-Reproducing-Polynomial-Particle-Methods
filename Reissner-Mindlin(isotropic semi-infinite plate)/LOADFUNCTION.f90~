MODULE LOADFUNCTION

    USE NEWTYPE
    USE GLBVAR
    USE PACKAGE

    IMPLICIT NONE

    INTERFACE LDFT
        MODULE PROCEDURE LDFT2D, LDFTVEC
    END INTERFACE LDFT

    INTERFACE UDFT
        MODULE PROCEDURE U_BD, BDNODALVALUE
    END INTERFACE UDFT

CONTAINS

SUBROUTINE LDFTVEC(VECVAL, VEC)

    REAL*8, INTENT(OUT) :: VECVAL(:)
    TYPE(POINT2D), INTENT(IN) :: VEC(:)
    INTEGER :: I

    DO I=1, UBOUND(VEC,1)
        VECVAL(I)=LDFT2D(VEC(I))
    ENDDO

END SUBROUTINE LDFTVEC


REAL*8 FUNCTION LDFT2D(PT2D)

    TYPE(POINT2D), INTENT(IN) :: PT2D
    REAL*8 :: X, Y

    X=PT2D%X
    Y=PT2D%Y
    
	LDFT2D=LOAD_Q*DCOS(X / L)
	
END FUNCTION LDFT2D

TYPE(DISPLACEMENT) FUNCTION U_BD(PT2D)

    TYPE(POINT2D), INTENT(IN) :: PT2D
    REAL*8 :: X, Y, Q, D, C(4), VAR(4)

	U_BD = DISPLACEMENT(0.0D0, 0.0D0, 0.0D0)
	
	CALL GET_COEFFOFEXACTSOL(C)
	
	D = STRESS_D(1,1) ! PLATE CONSTANT
	Q = LOAD_Q

    X=PT2D%X
    Y=PT2D%Y
	
	VAR(1) = DSIN(X / L)
	VAR(2) = DCOS(X / L)
	VAR(3) = DEXP(Y / L)
	VAR(4) = DEXP(GAMMA*Y / h)

	U_BD%W0  = L*((Q*L**5)/h**3)*((h**3/(D*L**2)) + (h**2/(KS*G(1)*L**4)) + C(1)*VAR(3) + &
			 C(2)*((2.0D0*D/ (KS*G(1)*L**2*h)) + (-Y / L))*VAR(3) - C(3)* &
			 (h**2*VAR(3) / (KS*G(1)*L**4)))*VAR(2)

	U_BD%PIX = (Q*L**5 / h**3)*(-(h**3 / (D*L**2)) - C(1)*VAR(3) - C(2)*(-Y / L)*VAR(3) + &
			  C(3)*(h**2*VAR(3) / (KS*G(1)*L**4)) - C(4)*(GAMMA*h*VAR(4) / (KS*G(1)*L**3)))*VAR(1)

	U_BD%PIY = (Q*L**5 / h**3)*(-C(1)*VAR(3) + C(2)*(1.0D0 - (-Y / L))*VAR(3) + C(3)*(h**2* &
			  VAR(3) / (KS*G(1)*L**4)) - C(4)*(h**2*VAR(4) / (KS*G(1)*L**4)))*VAR(2)
	
END FUNCTION U_BD

SUBROUTINE BDNODALVALUE(NODALVAL, PTS)
	TYPE(POINT2D), INTENT(IN) :: PTS(:)
	TYPE(DISPLACEMENT), INTENT(OUT) :: NODALVAL(:)
	INTEGER :: I
	
	DO I=1, UBOUND(PTS,1)
		NODALVAL(I) = U_BD(PTS(I))
	ENDDO
	
END SUBROUTINE BDNODALVALUE

END MODULE LOADFUNCTION
